/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE PointOfInterest PACKING
package com.MAVLink.icarous;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Point in space (Waypoint/Vertex etc...)
*/
public class msg_pointofinterest extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_PointOfInterest = 151;
    public static final int MAVLINK_MSG_LENGTH = 18;
    private static final long serialVersionUID = MAVLINK_MSG_ID_PointOfInterest;


      
    /**
    * Latitude
    */
    public float lat;
      
    /**
    * Longitude
    */
    public float lon;
      
    /**
    * Altitude
    */
    public float alt;
      
    /**
    * Heading
    */
    public float heading;
      
    /**
    * Identifier (0-Waypoint,1-geofence,2-Obstacle,3-Traffic)
    */
    public byte id;
      
    /**
    * Index
    */
    public byte index;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_PointOfInterest;
              
        packet.payload.putFloat(lat);
              
        packet.payload.putFloat(lon);
              
        packet.payload.putFloat(alt);
              
        packet.payload.putFloat(heading);
              
        packet.payload.putByte(id);
              
        packet.payload.putByte(index);
        
        return packet;
    }

    /**
    * Decode a pointofinterest message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.lat = payload.getFloat();
              
        this.lon = payload.getFloat();
              
        this.alt = payload.getFloat();
              
        this.heading = payload.getFloat();
              
        this.id = payload.getByte();
              
        this.index = payload.getByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_pointofinterest(){
        msgid = MAVLINK_MSG_ID_PointOfInterest;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_pointofinterest(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_PointOfInterest;
        unpack(mavLinkPacket.payload);        
    }

                
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_PointOfInterest -"+" lat:"+lat+" lon:"+lon+" alt:"+alt+" heading:"+heading+" id:"+id+" index:"+index+"";
    }
}
        