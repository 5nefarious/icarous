Real[4]    Command MonitorTraffic(Real position[3],Real velocity[3]);
Real       Command GetInterceptHeadingToPlan(String planID,Integer leg,Real position[3]);
Boolean    Command CheckSafeToTurn(Real position[3],Real velocity[3],Real fromHeading,Real toHeading);

Command SetVel(Real velocity[3]);
Command pprint(...);


TRAFFIC_RESOLUTION:{
	Real prevVelCmd[3];
  	InOut Boolean completionStatus;
  	In Integer nextWP;
  	In Real acPosition[3];
  	In Real acVelocity[3];
  	In Real resSpeed;
    Real output[4];
    Real velCmd[3];
    Real returnVel[3];
    Boolean returnSafe;
    Real track;
    Real speed;

    {
       EndCondition isKnown(output[0]);
       output = MonitorTraffic(acPosition,acVelocity);
    }


    if(output[1] < 100)
        velCmd[0] = output[1];
    else
        velCmd[0] = prevVelCmd[0];
    endif

    velCmd[1] = resSpeed;
    velCmd[2] = 0;

    SetVel(velCmd);

    prevVelCmd[0] = velCmd[0];
    prevVelCmd[1] = velCmd[1];
    prevVelCmd[2] = velCmd[2];

    {
        EndCondition isKnown(track);
        track = GetInterceptHeadingToPlan("Plan0",nextWP,acPosition);
    }



    returnVel[0] = track;
    returnVel[1] = resSpeed;
    returnVel[2] = 0;

    {
        EndCondition isKnown(returnSafe);
        returnSafe = CheckSafeToTurn(acPosition,acVelocity,velCmd[0],returnVel[0]);
    }


    if(returnSafe && output[0] < 0){
       completionStatus = true;
    }endif

}