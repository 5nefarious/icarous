// -*- Mode: Java -*-
Boolean Lookup missionStart;
Integer Lookup armStatus;
Integer Lookup takeoffStatus;
Integer Lookup numMissionWP;

Real[3] Lookup position;
Real[3] Lookup velocity;

// Low level Autopilot commands
Command SetMode(String mode);
Command SetYaw(Real heading);
Command Takeoff(Real altitude);
Command ArmMotors();
Command Land();
Command SetNextMissionWP(Integer index);
Command pprint(...);

// Library plans
LibraryAction CONFLICT_MANAGEMENT();

ICAROUS:
{

    Real _Position[3];
    Real _Velocity[3];
        	        
    FMS:
    {
        Boolean _idleStatus    = true;
        Boolean _takeoffStatus = false;
        Boolean _climbStatus   = false;
        Boolean _cruiseStatus  = false;
        Integer _numMissionWP;
        Integer _nextMissionWP = 1;
	
	    Repeat true;
	
        IDLE:
        {
            Boolean start = false;
            StartCondition _idleStatus;
            EndCondition !_idleStatus;

            {
            Repeat true;
            start = Lookup(missionStart);

            if (start){
                _numMissionWP = Lookup(numMissionWP);
                _takeoffStatus = true;
                _idleStatus = false;
            }endif
            }

        }// End of IDLE
	
        TAKEOFF:{
            Integer _armStatus;
            StartCondition _takeoffStatus;
            SkipCondition !_takeoffStatus;
            EndCondition !_takeoffStatus;

            pprint("Takeoff");

            CHANGE_MODE:SetMode("ACTIVE");

            ARM:{
                EndCondition isKnown(_armStatus) && (_armStatus >= 0);

                ArmMotors();

                CHECK_STATUS: {
                    Repeat true;
                    _armStatus = Lookup(armStatus);
                    pprint("In arm status");
                }
            }// End of ARM

            pprint("Armed motors",_armStatus);

            THROTTLE_UP:{
                Integer status;
                StartCondition (_armStatus==1);
                SkipCondition  (_armStatus!=1);

                SEND_COMMAND:{

                    EndCondition isKnown(status) && (status>=0);

                    Takeoff(5.0);

                    pprint("Taking off");

                    CHECK_STATUS: {
                        Repeat true;
                        status = Lookup(takeoffStatus);
                    }

                }

                if(status == 1){
                    pprint("Takeoff successful");
                    _climbStatus = true;
                    _takeoffStatus = false;
                }else{
                    pprint("Takeoff failed\n");
                    _idleStatus = true;
                    _takeoffStatus = false;
                }endif

            }// End of THROTTLE
        }// End of TAKEOFF


	CLIMB:{
	    StartCondition _climbStatus;
	    EndCondition !_climbStatus;
	    {
            Boolean val;
            Repeat true;

            _Position = Lookup(position);

            if(_Position[2] >= 3.0){
                pprint("Finished climbing");
                SetNextMissionWP(_nextMissionWP);
                SetMode("PASSIVE");
                _cruiseStatus = true;
                _climbStatus = false;
            }endif
	    }
	    
	}// End of CLIMB

	CRUISE:{
	    StartCondition _cruiseStatus;
	    // Perform Conflict Management (Detection and Resolution)
	    LibraryCall CONFLICT_MANAGEMENT();

	}// End of CRUISE

	LAND:{
	    Land();
	}// End of LAND
	
    }// End of FMS
}// End of ICAROUS

